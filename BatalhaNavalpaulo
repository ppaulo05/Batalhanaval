
package batalhanaval;


import java.util.Scanner;
import java.util.Random;

public class BatalhaNaval {

    private static void exibirMapa(char[][] mapa) {
        for (char[] linha : mapa) {
            for (char posicao : linha) {
                System.out.print(posicao + " ");
            }
            System.out.println();
        }
    }

    private static boolean verificarPosicao(char[][] mapa, int linha, int coluna, int tamanho, String orientacao) {
        if (orientacao.equals("horizontal")) {
            for (int i = 0; i < tamanho; i++) {
                if (coluna + i >= mapa[linha].length || mapa[linha][coluna + i] != 'O') {
                    return false;
                }
            }
        } else { // orientacao.equals("vertical")
            for (int i = 0; i < tamanho; i++) {
                if (linha + i >= mapa.length || mapa[linha + i][coluna] != 'O') {
                    return false;
                }
            }
        }
        return true;
    }

    private static void alocarBarcos(char[][] mapa, boolean modoManual) {
        int[][] barcos = {{4, 1}, {3, 2}, {2, 3}, {1, 4}};

        Scanner scanner = new Scanner(System.in);
        Random random = new Random();

        for (int[] barco : barcos) {
            int tamanho = barco[0];
            int quantidade = barco[1];
            for (int i = 0; i < quantidade; i++) {
                if (modoManual) {
                    while (true) {
                        System.out.println("Digite a posição do barco de tamanho " + tamanho + ":");
                        System.out.print("Digite o número da linha: ");
                        int linha = scanner.nextInt();
                        System.out.print("Digite o número da coluna: ");
                        int coluna = scanner.nextInt();
                        System.out.print("Digite a orientação (horizontal/vertical): ");
                        String orientacao = scanner.next();

                        if (verificarPosicao(mapa, linha, coluna, tamanho, orientacao)) {
                            if (orientacao.equals("horizontal")) {
                                for (int j = 0; j < tamanho; j++) {
                                    mapa[linha][coluna + j] = 'N';
                                }
                            } else { // orientacao.equals("vertical")
                                for (int j = 0; j < tamanho; j++) {
                                    mapa[linha + j][coluna] = 'N';
                                }
                            }
                            break;
                        } else {
                            System.out.println("Posição inválida. Tente novamente.");
                        }
                    }
                } else { // Modo automático
                    while (true) {
                        int linha = random.nextInt(mapa.length);
                        int coluna = random.nextInt(mapa[linha].length);
                        String orientacao = random.nextBoolean() ? "horizontal" : "vertical";
                        if (verificarPosicao(mapa, linha, coluna, tamanho, orientacao)) {
                            if (orientacao.equals("horizontal")) {
                                for (int j = 0; j < tamanho; j++) {
                                    mapa[linha][coluna + j] = 'N';
                                }
                            } else { // orientacao.equals("vertical")
                                for (int j = 0; j < tamanho; j++) {
                                    mapa[linha + j][coluna] = 'N';
                                }
                            }
                            break;
                        }
                    }
                }
            }
        }
    }

    private static void fazerMovimento(char[][] mapa, int linha, int coluna) {
        if (mapa[linha][coluna] == 'X' || mapa[linha][coluna] == '*') {
            System.out.println("Você já atirou nessa posição antes.");
        } else if (mapa[linha][coluna] == 'N') {
            System.out.println("Você acertou um barco!");
            mapa[linha][coluna] = 'X';
        } else {
            System.out.println("Você errou o tiro.");
            mapa[linha][coluna] = '*';
        }
    }

    private static boolean verificarFimDeJogo(char[][] mapa) {
        for (char[] linha : mapa) {
            for (char posicao : linha) {
                if (posicao == 'N') {
                    return false;
                }
            }
        }
        return true;
    }

    private static void jogadorVsComputador(boolean modoManual) {
        char[][] mapaJogador = new char[10][10];
        char[][] mapaComputador = new char[10][10];

        for (char[] linha : mapaJogador) {
            for (int j = 0; j < linha.length; j++) {
                linha[j] = 'O';
            }
        }

        for (char[] linha : mapaComputador) {
            for (int j = 0; j < linha.length; j++) {
                linha[j] = 'O';
            }
        }

        alocarBarcos(mapaJogador, modoManual);
        alocarBarcos(mapaComputador, false);

        Scanner scanner = new Scanner(System.in);
        Random random = new Random();

        while (true) {
            System.out.println("Mapa do jogador:");
            exibirMapa(mapaJogador);
            System.out.println("\nMapa do computador:");
            exibirMapa(mapaComputador);

            System.out.print("Digite o número da linha para fazer o tiro: ");
            int linha = scanner.nextInt();
            System.out.print("Digite o número da coluna para fazer o tiro: ");
            int coluna = scanner.nextInt();

            fazerMovimento(mapaComputador, linha, coluna);

            if (verificarFimDeJogo(mapaComputador)) {
                System.out.println("Parabéns! Você afundou todos os barcos do computador.");
                break;
            }

            while (true) {
                linha = random.nextInt(10);
                coluna = random.nextInt(10);
                if (mapaJogador[linha][coluna] == 'O') {
                    fazerMovimento(mapaJogador, linha, coluna);
                    break;
                }
            }

            if (verificarFimDeJogo(mapaJogador)) {
                System.out.println("O computador afundou todos os seus barcos. Você perdeu.");
                break;
            }
        }
    }

    private static void jogadorVsJogador(boolean modoManual) {
        char[][] mapaJogador1 = new char[10][10];
        char[][] mapaJogador2 = new char[10][10];

        for (char[] linha : mapaJogador1) {
            for (int j = 0; j < linha.length; j++) {
                linha[j] = 'O';
            }
        }

        for (char[] linha : mapaJogador2) {
            for (int j = 0; j < linha.length; j++) {
                linha[j] = 'O';
            }
        }

        alocarBarcos(mapaJogador1, modoManual);
        alocarBarcos(mapaJogador2, modoManual);

        Scanner scanner = new Scanner(System.in);

        int jogadorAtual = 1;

        while (true) {
            System.out.println("Mapa do Jogador 1:");
            exibirMapa(mapaJogador1);
            System.out.println("\nMapa do Jogador 2:");
            exibirMapa(mapaJogador2);

            System.out.print("Jogador " + jogadorAtual + " - Digite o número da linha para fazer o tiro: ");
            int linha = scanner.nextInt();
            System.out.print("Jogador " + jogadorAtual + " - Digite o número da coluna para fazer o tiro: ");
            int coluna = scanner.nextInt();

            if (jogadorAtual == 1) {
                fazerMovimento(mapaJogador2, linha, coluna);
                if (verificarFimDeJogo(mapaJogador2)) {
                    System.out.println("Parabéns! Jogador 1 afundou todos os barcos do Jogador 2.");
                    break;
                }
                jogadorAtual = 2;
            } else {
                fazerMovimento(mapaJogador1, linha, coluna);
                if (verificarFimDeJogo(mapaJogador1)) {
                    System.out.println("Parabéns! Jogador 2 afundou todos os barcos do Jogador 1.");
                    break;
                }
                jogadorAtual = 1;
            }
        }
    }

    public static void main(String[] args) {
        System.out.println("Bem-vindo ao jogo de Batalha Naval!");
        System.out.println("Escolha o modo de jogo:");
        System.out.println("1 - Jogador vs. Computador");
        System.out.println("2 - Jogador vs. Jogador");

        Scanner scanner = new Scanner(System.in);
        int modoJogo = scanner.nextInt();

        System.out.println("Deseja alocar os barcos manualmente? (S/N)");
        String alocacaoManual = scanner.next();
        boolean modoManual = alocacaoManual.equalsIgnoreCase("S");

        if (modoJogo == 1) {
            jogadorVsComputador(modoManual);
        } else if (modoJogo == 2) {
            jogadorVsJogador(modoManual);
        } else {
            System.out.println("Modo de jogo inválido.");
        }
    }
}
